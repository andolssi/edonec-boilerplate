name: "build client On PR approve / merge to dev and master"

on:
  push:
    branches: [master, release]
    paths:
      - "apps/client/**"
      - ".github/workflows/client*"
      - ".docker/Dockerfile.client*"
      - "packages/**"

jobs:
  client-build-and-publish-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' # Running this job only for master branch

    steps:
      - uses: actions/checkout@v3 # Checking out the repo

      - name: Build and Publish latest Docker image
        uses: VaultVulp/gp-docker-action@1.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # Provide GITHUB_TOKEN to login into the GitHub Packages
          image-name: client # Provide only Docker image name, tag will be automatically set to latest
          dockerfile: .docker/Dockerfile.client
          image-tag: staging
  client-deploy-to-staging:
    runs-on: ubuntu-latest
    needs: [client-build-and-publish-staging]
    if: github.ref == 'refs/heads/master' # Running this job only for master branch
    steps:
      - name: Set the value
        run: |
          echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          echo "USERNAME=${{ secrets.USERNAME }}" >> $GITHUB_ENV
      - name: remote docker-compose up via ssh
        uses: appleboy/ssh-action@master
        env:
          APPTOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: ${{ env.USERNAME }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          envs: APPTOKEN,USERNAME
          script: |
            echo $APPTOKEN | docker login ghcr.io -u $USERNAME --password-stdin
            cd /docker/staging
            docker pull ghcr.io/edonec/boilerplate/client:staging
            docker-compose up --no-deps --build --force-recreate -d client
