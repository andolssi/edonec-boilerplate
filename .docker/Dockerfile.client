FROM node:alpine AS sourcer
RUN apk update
# Set working directory
WORKDIR /app
RUN yarn global add turbo
COPY ../ .
RUN turbo prune --scope=client --docker

# Add lockfile and package.json's of isolated subworkspace
FROM node:alpine AS installer
RUN apk update
WORKDIR /app
COPY --from=sourcer /app/out/json/ .
COPY --from=sourcer /app/out/yarn.lock ./yarn.lock
RUN yarn install

FROM node:alpine AS builder
RUN apk update
WORKDIR /app
COPY --from=installer /app/ .
COPY --from=sourcer /app/out/full/ .
COPY .gitignore .gitignore
RUN yarn turbo run build --scope=client --include-dependencies --no-deps



# Production image, copy all the files and run next
FROM node:alpine AS runner
WORKDIR /app

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

RUN chown -R nextjs:nodejs /app
ENV NODE_ENV production
# Next.js collects completely anonymous telemetry data about general usage.
# The next line disables it
ENV NEXT_TELEMETRY_DISABLED 1

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder /app/apps/client/build/standalone/apps/client ./
COPY --from=builder /app/apps/client/build/standalone/node_modules ./
COPY --from=builder /app/apps/client/build/standalone/package.json ./
COPY --from=builder /app/apps/client/build/static ./build/static

# You only need to copy next.config.js if you are NOT using the default configuration
COPY --from=builder /app/apps/client/next.config.js ./
COPY --from=builder /app/apps/client/public ./public
# COPY --from=builder /app/apps/client/package.json ./package.json



EXPOSE 3000

ENV PORT 3000

CMD [ "node", "server.js" ]