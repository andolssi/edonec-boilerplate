FROM node:alpine AS sourcer
RUN apk update
# Set working directory
WORKDIR /app
RUN yarn global add turbo
COPY ../ .
RUN turbo prune --scope=dashboard --docker

# Add lockfile and package.json's of isolated subworkspace
FROM node:alpine AS installer
RUN apk update
WORKDIR /app
COPY --from=sourcer /app/out/json/ .
COPY --from=sourcer /app/out/yarn.lock ./yarn.lock
RUN yarn install

FROM node:alpine AS builder
RUN apk update
WORKDIR /app
COPY --from=installer /app/ .
COPY --from=sourcer /app/out/full/ .
COPY .gitignore .gitignore
ENV NODE_ENV production
RUN yarn turbo run build --filter=./apps/dashboard



# Production image, copy all the files and run next
FROM nginx:alpine AS runner

COPY --from=builder /app/apps/dashboard/build /usr/share/nginx/html/dashboard
COPY --from=builder /app/apps/dashboard/nginx/nginx.conf /etc/nginx/conf.d/default.conf


EXPOSE 80
